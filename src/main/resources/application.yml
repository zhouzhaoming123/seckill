spring:
  redis:
      # 数据库
      database: 0
      host: 127.0.0.1
      port: 6379
      timeout: 3000
      jedis:
        pool:
          max-idle: 200
          min-idle: 5
          max-active: 8
          max-wait: 1000

  # thymeleaf配置
  thymeleaf:
    # 关闭缓存
    cache: false
  datasource:
    # 配置连接数据库的各个信息
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/seckill?serverTimezone=GMT%2B8&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    hikari:
      # 连接池名
      pool-name: DateHikariCP
      # 最小空闲连接数
      minimum-idle: 5
      # 空闲连接最大时间，默认600000（10分钟）
      idle-timeout: 1800000
      # 最大连接数，默认10
      maximum-pool-size: 10
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 连接最大存活时间，0标识永久存活，默认1800000（30分钟）
      max-lifetime: 1800000
      # 连接超时时间，默认30秒
      connection-timeout: 30000
      # 测试连接是否可用的查询语句
      connection-test-query: SELECT 1
  # 引入swagger jar包 配置
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # RabbitMQ
  rabbitmq:
    # 服务器
    host: localhost
    # 用户名
    username: guest
    # 密码
    password: guest
    # 虚拟主机
    virtual-host: /
    # 端口
    port: 5672
    listener:
      simple:
        # 消费者的最小数量
        concurrency: 10
        # 消费者的最大数量
        max-concurrency: 10
        # 限制消费者，每次只处理一条消息，处理完再消费下一条消息
        prefetch: 1
        # 启动时是否默认启动容器，默认true
        auto-startup: true
        # 消息被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        #发布重试 默认flase
        enabled: true
        #重试时间，默认1000ms
        initial-interval: 1000ms
        #重试次数 默认3次
        max-attempts: 3
        #重试最大间隔时间，默认10000ms
        max-interval: 10000ms
        #重试间隔乘数 ，比如配2.0，第一次等10秒，第二次等20秒，第三次等40秒
        multiplier: 1

mybatis-plus:
  # 配置Mapper.xml映射文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 配置MyBatis返回数据类型别名（默认别名是类名）
  type-aliases-package: com.zzmhome.seckill.pojo

# mybatis sql打印（方法接口所在的包，不是mapper所在的包）
logging:
  level:
    com.zzmhome.seckill.mapper: debug

server:
  port: 9090
